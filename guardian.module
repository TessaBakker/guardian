<?php

/**
 * @file
 * Contains guardian.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\guardian\Guardian;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;

/**
 * Implements hook_help().
 */
function guardian_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the guardian module.
    case 'help.page.guardian':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module automatically unsets the user 1 password after a configurable amount of hours (default 2).') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_cron().
 */
function guardian_cron() {
  $guardian = new Guardian();

  $guardian->account = \Drupal\user\Entity\User::load(1);
  $is_valid = $guardian->guardian_check_valid_data();
  $session_valid = $guardian->guardian_check_valid_session();

  // Destroy the session after unwanted user change or inactivity
  if (!$is_valid || $session_valid) {
    $guardian->guardian_reset_user1();
  }
}

/**
 * Implements hook_mail().
 */
function guardian_mail($key, &$message, $params) {
  switch ($key) {
    case 'cron':
    case 'enable':
    case 'disable':
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}

/**
 *
 * Implements hook_ENTITY_TYPE_view().
 */
function guardian_user_view(&$build, $account) {
  $guardian = new Guardian();
  $current_user_is_root = $guardian->guardian_account_is_root();
  $guardian->account = $account;
  $profile_user_is_root = $guardian->guardian_account_is_root();

  if ($profile_user_is_root && !$current_user_is_root) {
    throw new AccessDeniedHttpException();
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for user_profile_form().
 */
function guardian_form_user_form_alter(&$form, &$form_state, $form_id) {
  $guardian = new Guardian();

  // Current user.
  $current_user_is_root = $guardian->guardian_account_is_root();

  // Get user profile account.
  $account = \Drupal::routeMatch()->getParameter('user');
  if (!$account) {
    return;
  }

  $guardian->account = $account;
  $profile_user_is_root = $guardian->guardian_account_is_root();

  // Don't alter form if profile isn't USER 1.
  if (!$profile_user_is_root) {
    return;
  }

  // Show access denied on USER 1 profile, if current user isn't USER 1.
  if (!$current_user_is_root) {
    throw new AccessDeniedHttpException();
  }

  // Note: element_get_visible_children does not exist anymore,
  // setting this alter fields manually:
  $fields = array('mail', 'name', 'status', 'roles');
  foreach ($fields as $field) {
    $form['account'][$field]['#disabled'] = TRUE;
    $form['account'][$field]['#description'] = t('Disabled by Guardian.');
  }

  // Deny access to unusable fields.
  $form['account']['pass']['#access'] = FALSE;
  $form['account']['current_pass']['#access'] = FALSE;
}

/**
 * Implements hook_user_presave().
 *
 * Save USER 1 profile with default values.
 */
function guardian_user_presave($account) {
  $guardian = new Guardian();
  $guardian->account = $account;
  if ($guardian->guardian_account_is_root()) {
    $guardian->guardian_cleanup_database_variables();

    $account->pass = '';
    $account->mail = \Drupal\Core\Site\Settings::get('guardian_mail');
    $account->status = 1;
  }
}

/**
 * Implements hook_mail_alter().
 */
function guardian_mail_alter(&$message) {
  $guardian = new Guardian();

  // @todo Do not execute this with every mail.
  $guardian->guardian_cleanup_database_variables();

  $is_password_reset_mail = ($message['id'] == 'user_password_reset');
  $is_guardian_mail = ($message['to'] == \Drupal\Core\Site\Settings::get('guardian_mail'));

  if ($is_password_reset_mail && $is_guardian_mail) {
    $guardian->guardian_add_metadata_to_body($message['body']);
  }
}
