<?php

/**
 * @file
 * Contains guardian.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\guardian\GuardianManagerInterface;

/**
 * Implements hook_help().
 */
function guardian_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the guardian module.
    case 'help.page.guardian':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module automatically unsets the User 1 password after a configurable amount of hours (default 2).') . '</p>';
      return $output;
  }

  return '';
}

/**
 * Implements hook_cron().
 */
function guardian_cron() {
  /** @var GuardianManagerInterface $guardian */
  $guardian = \Drupal::service('guardian.manager');

  /** @var \Drupal\user\UserInterface[] $accounts */
  $accounts = \Drupal::entityTypeManager()
    ->getStorage('user')
    ->loadMultiple($guardian->getGuardedUids());

  foreach ($accounts as $account) {
    if (!$guardian->hasValidData($account)) {
      $guardian->defaultUserValues($account);
    }
  }

}

/**
 * Implements hook_mail().
 */
function guardian_mail($key, &$message, $params) {
  switch ($key) {
    case 'notification':
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function guardian_user_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
  /** @var GuardianManagerInterface $guardian */
  $guardian = \Drupal::service('guardian.manager');

  $is_forbidden = $guardian->isGuarded($entity) && !$guardian->isGuarded($account);
  return \Drupal\Core\Access\AccessResult::forbiddenIf($is_forbidden);
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @see \Drupal\user\ProfileForm::form()
 */
function guardian_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $config = Drupal::config('guardian.settings');

  foreach (\Drupal\Core\Render\Element::getVisibleChildren($form['account']) as $field) {
    $form['account'][$field]['#disabled'] = TRUE;
    $form['account'][$field]['#description'] = \Drupal\Component\Utility\Xss::filterAdmin($config->get('field_description'));
  }

  // Deny access to unusable fields.
  $form['account']['pass']['#access'] = FALSE;
  $form['account']['current_pass']['#access'] = FALSE;
}

/**
 * Implements hook_user_presave().
 *
 * Save USER 1 profile with default values.
 */
/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function guardian_user_presave(Drupal\Core\Entity\EntityInterface $entity) {
  /** @var GuardianManagerInterface $guardian */
  $guardian = \Drupal::service('guardian.manager');

  if ($guardian->isGuarded($entity)) {
    $guardian->defaultUserValues($entity);
  }
}

/**
 * Implements hook_mail_alter().
 */
function guardian_mail_alter(&$message) {
  /** @var GuardianManagerInterface $guardian */
  $guardian = \Drupal::service('guardian.manager');

  $is_password_reset_mail = ($message['id'] == 'user_password_reset');
  $is_guardian_mail = ($message['to'] == \Drupal\Core\Site\Settings::get('guardian_mail'));

  if ($is_password_reset_mail && $is_guardian_mail) {
    $guardian->addMetadataToBody($message['body']);
  }
}
