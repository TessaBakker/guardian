<?php

/**
 * @file Hooks and helpers for Guardian.
 */

/**
 * Implements hook_cron().
 */
function guardian_cron() {
  global $conf;
  $account = user_load(1);
  $changed = FALSE;

  if (!_guardian_valid_account($account)) {
    unset($account->password);
    watchdog('guardian', 'Possible hack attempt registrated with USER1: %user', array(
      '%user' => var_export($account, TRUE),
    ), WATCHDOG_ALERT);

    // Reset the account.
    user_save($account);
  }

  $hours = isset($conf['guardian_hours']) ? (int) $conf['guardian_hours'] : 2;

  // Destroy the session after user change or inactivity.
  if ($changed || $account->access <= REQUEST_TIME - 3600 * $hours) {
    _guardian_destroy_user1_sessions();
  }
}

/**
 * Helper to check for valid Guardian user data.
 */
function _guardian_valid_account($account) {
  global $conf;

  $has_guardian_mail = !empty($conf['guardian_mail']) && $account->init == $conf['guardian_mail'] && $account->mail == $conf['guardian_mail'];
  $has_no_pass = empty($account->pass);

  return  $has_guardian_mail && $has_no_pass;
}

/**
 * Helper function to destroy all USER1 sessions.
 */
function _guardian_destroy_user1_sessions() {
  db_delete('sessions')
    ->condition('uid', 1)
    ->execute();
}

/**
 * Implements hook_user_view().
 */
function guardian_user_view($account, $view_mode, $langcode) {
  global $user;

  if ((int) $account->uid === 1) {
    if ((int) $user->uid !== 1) {
      drupal_access_denied();
      drupal_exit();
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function guardian_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $account = $form['#user'];

  if ((int) $account->uid === 1) {
    if ((int) $user->uid !== 1) {
      drupal_access_denied();
      drupal_exit();
    }

    foreach (element_get_visible_children($form['account']) as $field) {
      $form['account'][$field]['#access'] = isset($form['account'][$field]['#default_value']);
      $form['account'][$field]['#disabled'] = TRUE;
      $form['account'][$field]['#description'] = t('Disabled by Guardian.');
    }
  }
}

/**
 * Implements hook_mail().
 */
function guardian_mail($key, &$message, $params) {
  switch ($key) {
    case 'enable':
    case 'disable':
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}

/**
 * Implements hook_user_presave().
 *
 * Save USER1 profile with default values.
 */
function guardian_user_presave(&$edit, $account, $category) {
  global $conf;

  if ((int) $account->uid === 1) {
    $edit['pass'] = '';
    $edit['mail'] = $conf['guardian_mail'];
    $edit['status'] = 1;
  }
}
