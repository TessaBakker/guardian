<?php

/**
 * @file
 * Install and update functions.
 */

/**
 * Implements hook_requirements().
 */
function guardian_requirements($phase) {
  $requirements = [];
  $guardian_mail = \Drupal\Core\Site\Settings::get('guardian_mail');

  if (empty($guardian_mail)) {
    $requirements['guardian'] = [
      'title' => t('Guardian'),
      'description' => t('Missing $settings[\'guardian_mail\'] value in settings.php.'),
      'severity' => REQUIREMENT_ERROR,
    ];
  }
  elseif (!\Drupal::service('email.validator')->isValid($guardian_mail)) {
    $requirements['guardian'] = [
      'title' => t('Guardian'),
      'description' => t('$settings[\'guardian_mail\'] needs a be a valid mail address'),
      'severity' => REQUIREMENT_ERROR,
    ];
  }
  elseif ($phase == 'runtime') {
    $timeout_count = \Drupal\Core\Site\Settings::get('guardian_hours', 2);
    $requirements['guardian'] = [
      'title' => t('Guardian'),
      'value' => \Drupal::translation()->formatPlural($timeout_count, 'Timeout: @count hour', 'Timout: @count hours', [
        '@count' => $timeout_count,
      ]),
      'description' => t('Set with mail address %mail', ['%mail' => $guardian_mail]),
      'severity' => REQUIREMENT_OK,
    ];
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function guardian_install() {
  /** @var \Drupal\guardian\GuardianManagerInterface $guardian */
  $guardian = \Drupal::service('guardian.manager');

  /** @var \Drupal\user\UserInterface[] $accounts */
  $accounts = \Drupal::entityTypeManager()
    ->getStorage('user')
    ->loadMultiple($guardian->getGuardedUids());

  foreach ($accounts as $account) {
    if (!$guardian->hasValidData($account)) {
      $guardian->defaultUserValues($account);
    }
  }

  $guardian->mailStatusUpdate(TRUE, \Drupal::entityTypeManager()->getStorage('user')->load(1));
}

/**
 * Implements hook_uninstall().
 */
function guardian_uninstall() {
  /** @var \Drupal\guardian\GuardianManagerInterface $guardian */
  $guardian = \Drupal::service('guardian.manager');

  $guardian->mailStatusUpdate(FALSE, \Drupal::entityTypeManager()->getStorage('user')->load(1));
}
